import subprocess
import datetime
import threading
import tkinter as tk
from tkinter import ttk, scrolledtext, messagebox

def run_scan():
    target = target_entry.get().strip()
    scan_type = scan_type_var.get()

    if not target:
        messagebox.showwarning("Input Error", "Please enter a target IP or domain.")
        return

    scan_commands = {
        'Quick Scan': f"nmap -T4 -F {target}",
        'Version Detection': f"nmap -sV {target}",
        'OS Detection': f"nmap -O {target}",
        'Aggressive Scan': f"nmap -A {target}",
        'Vulnerability Scan': f"nmap --script vuln {target}"
    }

    command = scan_commands.get(scan_type)
    if not command:
        messagebox.showerror("Error", "Invalid scan type selected.")
        return

    result_text.delete('1.0', tk.END)
    result_text.insert(tk.END, f"Running scan: {command}\n\n")
    result_text.insert(tk.END, "Scanning, please wait...\n")

    # Run the scan in a separate thread
    threading.Thread(target=execute_scan, args=(command, target)).start()

def execute_scan(command, target):
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        output = result.stdout

        # Update result box
        result_text.insert(tk.END, "\nScan complete!\n\n")
        result_text.insert(tk.END, output)

        # Save output to a text file
        timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        file_name = f"scan_result_{target.replace('.', '_')}_{timestamp}.txt"
        with open(file_name, "w") as file:
            file.write(output)

        result_text.insert(tk.END, f"\nâœ… Report saved as: {file_name}\n")
    except Exception as e:
        result_text.insert(tk.END, f"\nAn error occurred: {e}\n")

# GUI Setup
app = tk.Tk()
app.title("Vulnerability Scanner")
app.geometry("700x500")
app.resizable(False, False)

# Target input
tk.Label(app, text="Enter IP or Domain:", font=("Arial", 12)).pack(pady=5)
target_entry = tk.Entry(app, width=50, font=("Arial", 12))
target_entry.pack(pady=5)

# Scan type selection
tk.Label(app, text="Select Scan Type:", font=("Arial", 12)).pack(pady=5)
scan_type_var = tk.StringVar(value="Quick Scan")
scan_options = ["Quick Scan", "Version Detection", "OS Detection", "Aggressive Scan", "Vulnerability Scan"]
scan_menu = ttk.Combobox(app, textvariable=scan_type_var, values=scan_options, state="readonly", width=30)
scan_menu.pack(pady=5)

# Start scan button
start_button = tk.Button(app, text="Start Scan", command=run_scan, bg="#4CAF50", fg="white", font=("Arial", 12), padx=10, pady=5)
start_button.pack(pady=10)

# Result box
result_text = scrolledtext.ScrolledText(app, width=80, height=20, font=("Courier", 10))
result_text.pack(pady=10)

app.mainloop()
